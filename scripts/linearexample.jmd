# Case studies setup
## Current Setup

### Set design space using packages

#### Input Settings
```julia
length_constructs = 4;
pre_mod = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n"];
order_c = false ;
m = groupmod(pre_mod);
design = constructdesign(m,length_constructs,order = order_c);
S = collect(getspace(design))
#set up toy_data
rng  = MersenneTwister();
activities = rand(rng,Uniform(-10,15),length(m));
toy_data = Dict(m .=> activities);

```

#### Construction using BOMoD.jl
```julia
m = groupmod(pre_mod);
design = constructdesign(m,3,order = order);
space = getspace(design);
```

## Generating Toy Data
```julia
rng  = MersenneTwister();
activities = rand(rng,Uniform(0,5),length(m));
toy_data = Dict(m .=> activities);
```

### Frist sampling step

```julia
n_first = 3;
constructs = sample(rng,space,n_first)
```

### Evaluted new data

```julia
lab_μ,lab_σ = go2lab(rng,constructs,toy_data)
df = DataFrame(constructs = constructs,μ = lab_μ, σ = lab_σ);
```

### Surrogate model
```julia
x_train = df.constructs
y_train = df.μ
#σ² = (df.σ).^2
k = Linear()
linear_model = fit_gp(x_train,y_train,k,m,[1],optimise = true)
predictions = predict_GP(S,x_train,linear_model,m)
```
# Batch sampling step
```julia
thompson_sampling(predictions,10)
```

```julia

```
